#!/bin/bash
# Script para simula√ß√£o de envio de notifica√ß√µes

# Par√¢metros recebidos do Rundeck
TEAM="$RD_OPTION_TEAM"
PRIORITY="${RD_OPTION_PRIORITY:-medium}"
MESSAGE="$RD_OPTION_MESSAGE"
LOG_FILE="/var/log/results/notification-$(date +%s).log"

{
    echo "================================================================="
    echo "                   NOTIFICA√á√ÉO ENVIADA"
    echo "================================================================="
    echo "DATA/HORA: $(date '+%Y-%m-%d %H:%M:%S')"
    echo "ALERTA ID: ${RD_JOB_EXECID:-desconhecido}"
    echo "================================================================="
    echo
    echo "DETALHES DA NOTIFICA√á√ÉO:"
    echo "-----------------------------------------------------------------"
    echo "Equipe: ${TEAM:-'Todas as equipes'}"
    echo "Prioridade: $PRIORITY"
    echo "Mensagem: $MESSAGE"
    echo

    # Simula√ß√£o de a√ß√£o tomada
    case "$PRIORITY" in
        high|critical)
            EMOJI="üî¥"
            echo "$EMOJI A√á√ÉO: Ticket #INC-$(date +%s | cut -c 6-10) de alta prioridade criado no ServiceDesk"
            echo "$EMOJI A√á√ÉO: Notifica√ß√£o SMS enviada para os respons√°veis de plant√£o"
            echo "$EMOJI A√á√ÉO: Alert publicado no canal #incidentes-criticos no Slack"
            ;;
        medium)
            EMOJI="üü°"
            echo "$EMOJI A√á√ÉO: Ticket #INC-$(date +%s | cut -c 6-10) de m√©dia prioridade criado no ServiceDesk"
            echo "$EMOJI A√á√ÉO: Alerta enviado para o canal adequado no Slack"
            ;;
        low|info)
            EMOJI="üîµ"
            echo "$EMOJI A√á√ÉO: Registro #LOG-$(date +%s | cut -c 6-10) adicionado ao log de eventos"
            echo "$EMOJI A√á√ÉO: Notifica√ß√£o enviada por email para a equipe respons√°vel"
            ;;
    esac
    
    echo
    echo "ENCAMINHAMENTOS:"
    echo "-----------------------------------------------------------------"
    
    # Determinar para quem encaminhar com base na equipe e prioridade
    if [[ -z "$TEAM" || "$TEAM" == "operations" ]]; then
        echo "‚úì Equipe de Opera√ß√µes: Notifica√ß√£o enviada via Slack e email"
        echo "  ‚Ä¢ Contatos: equipe-operacoes@empresa.com"
        echo "  ‚Ä¢ Canal: #operacoes-ti"
    fi
    
    if [[ -z "$TEAM" || "$TEAM" == "development" ]]; then
        echo "‚úì Equipe de Desenvolvimento: Notifica√ß√£o enviada via Slack e email"
        echo "  ‚Ä¢ Contatos: desenvolvedores@empresa.com"
        echo "  ‚Ä¢ Canal: #dev-alerts"
    fi
    
    if [[ -z "$TEAM" || "$TEAM" == "security" ]]; then
        echo "‚úì Equipe de Seguran√ßa: Notifica√ß√£o enviada via Slack e email"
        echo "  ‚Ä¢ Contatos: seguranca@empresa.com"
        echo "  ‚Ä¢ Canal: #security-alerts"
    fi
    
    # Para alta prioridade, registrar em sistemas adicionais
    if [[ "$PRIORITY" == "high" || "$PRIORITY" == "critical" ]]; then
        echo "‚úì Status do incidente vis√≠vel no dashboard de opera√ß√µes"
        echo "‚úì Alerta SMS enviado para coordenadores: +5511XXXXXXXXXX, +5511987654321"
        echo "‚úì Incidente agendado para discuss√£o na pr√≥xima reuni√£o de retrospectiva"
    fi
    
    echo
    echo "PR√ìXIMOS PASSOS RECOMENDADOS:"
    echo "-----------------------------------------------------------------"
    if [[ "$PRIORITY" == "high" || "$PRIORITY" == "critical" ]]; then
        echo "1. Verificar imediatamente o problema reportado"
        echo "2. Escalar para especialistas se n√£o for resolvido em 30 minutos"
        echo "3. Atualizar o status do incidente a cada hora at√© resolu√ß√£o"
        echo "4. Documentar todas as a√ß√µes no ticket #INC-$(date +%s | cut -c 6-10)"
    elif [[ "$PRIORITY" == "medium" ]]; then
        echo "1. Analisar o problema dentro das pr√≥ximas 4 horas"
        echo "2. Verificar se h√° incidentes similares anteriores"
        echo "3. Documentar solu√ß√µes aplicadas no ticket #INC-$(date +%s | cut -c 6-10)"
    else
        echo "1. Agendar an√°lise do problema para o pr√≥ximo dia √∫til"
        echo "2. Verificar se h√° padr√µes recorrentes neste tipo de alerta"
    fi
    
    echo
    echo "================================================================="
    echo "                      FIM DA NOTIFICA√á√ÉO"
    echo "================================================================="
} | tee -a "$LOG_FILE"

# Criar link para o √∫ltimo log para f√°cil acesso
ln -sf "$LOG_FILE" /var/log/results/latest-notification.log

echo "Script executado com sucesso. Log completo: $LOG_FILE"
exit 0